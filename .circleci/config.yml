version: 2.1
executors:
  docker-builder:
    docker:
      - image: circleci/python:3.7.5
jobs:
  build:
    executor: docker-builder
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: install python dependence
          command:  |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: excute unit test
          command:  |
            . venv/bin/activate
            cd src && python -m pytest
          environment:
            WORK_ENV: TEST
      - store_test_results:
          path: test-results
  make_artifacts:
    executor: docker-builder
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build image
          command: |
            docker build -t multimedia-manager-backend:latest .
      - run:
          name: save docker image
          command: |
            mkdir -p ./caches
            docker save -o ./caches/multimedia-manager-backend.tar multimedia-manager-backend
      - persist_to_workspace:
          root: .
          paths:
            - ./caches/multimedia-manager-backend.tar
      - store_artifacts:
          path: ./caches/multimedia-manager-backend.tar
  publish-latest:
    executor: docker-builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/caches/multimedia-manager-backend.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push multimedia-manager-backend:latest
workflows:
  only_build:
    jobs:
      - build
      - make_artifacts:
          requires:
            - build
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - make_artifacts
          filters:
            branches:
              only: master